{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from 'react';\nimport { withNavigation } from \"react-navigation\";\nimport * as Progress from 'react-native-progress';\nimport { useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Amount = function Amount(_ref) {\n  var navigate = _ref.navigate;\n  useEffect(function () {\n    monInput();\n  }, [money]);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    money = _useState2[0],\n    setMoney = _useState2[1];\n  function monInput() {\n    global.mon = money;\n  }\n  function toResult() {\n    global.mon = money;\n    navigate('ThirdPage');\n  }\n  var onChanged = function onChanged(money) {\n    var newText = '';\n    var numbers = '$0123456789';\n    for (var i = 0; i < money.length; i++) {\n      if (numbers.indexOf(money[i]) > -1) {\n        newText = newText + money[i];\n      } else {\n        alert(\"please enter numbers only\");\n      }\n    }\n    setMoney(newText);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"How much do you want to invest?\"\n    }), _jsx(TextInput, {\n      keyboardType: \"numeric\",\n      onChangeText: function onChangeText(money) {\n        return onChanged(money);\n      },\n      style: styles.text1,\n      placeholder: \"e.g. $2250\",\n      value: money\n    }), _jsx(Button, {\n      color: \"#d90f8e\",\n      title: \"Next\"\n      ,\n      onPress: function onPress() {\n        return toResult();\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1c0b24',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    fontSize: 30,\n    color: 'white',\n    marginBottom: 20,\n    fontWeight: 800,\n    width: 350,\n    textAlign: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    width: 200,\n    justifyContent: 'center',\n    paddingVertical: 12,\n    marginTop: 15,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: '#d90f8e'\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  text1: {\n    width: 250,\n    fontSize: 15,\n    color: 'gray',\n    paddingBottom: 0\n  }\n});\nexport default Amount;","map":{"version":3,"names":["React","useState","withNavigation","Progress","useEffect","Amount","navigate","monInput","money","setMoney","global","mon","toResult","onChanged","newText","numbers","i","length","indexOf","alert","styles","header","text1","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","fontSize","color","marginBottom","fontWeight","width","textAlign","button","paddingVertical","marginTop","paddingHorizontal","borderRadius","elevation","buttonText","paddingBottom"],"sources":["/Users/tomershmul/Desktop/HackGT/Stocks/Amount.js"],"sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport { StyleSheet, View, Button, Pressable, TextInput} from 'react-native';\nimport { useState } from 'react';\nimport {withNavigation} from \"react-navigation\";\nimport * as Progress from 'react-native-progress';\nimport { useEffect } from 'react';\n\n\nconst Amount = ({navigate}) => {\n  useEffect(() => {\n    monInput()\n}, [money])\n\n  const [money, setMoney] = useState('')\n\n  function monInput() {\n    global.mon = money;\n  }\n\n  function toResult() {\n    global.mon = money;\n    navigate('ThirdPage')\n  }\n\n  const onChanged = (money) => {\n    let newText = '';\n    let numbers = '$0123456789';\n\n    for (var i=0; i < money.length; i++) {\n        if(numbers.indexOf(money[i]) > -1 ) {\n            newText = newText + money[i];\n        }\n        else {\n            alert(\"please enter numbers only\");\n        }\n    }\n    setMoney(newText);\n}\n\n  return (\n    <>\n        <Text style={styles.header}>How much do you want to invest?\n        </Text>\n        <TextInput\n         keyboardType='numeric'\n         onChangeText={money => onChanged(money)}\n          style={styles.text1}\n          placeholder = 'e.g. $2250'\n          value = {money}\n          //onChangeText = {(money) => setMoney(money)}\n        />\n        <Button\n        color = \"#d90f8e\"\n        title = \"Next\"\n        //onPress={register}\n        onPress={() => toResult()}\n        />\n    </>\n  );\n\n  \n  \n}\n\nconst styles = StyleSheet.create({\n  \n    container: {\n      flex: 1,\n      backgroundColor: '#1c0b24',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    header: {\n      fontSize: 30,\n      color: 'white',\n      marginBottom: 20,\n      fontWeight: 800,\n      width: 350,\n      textAlign: 'center',\n\n    },\n    button: {\n      alignItems: 'center',\n      width: 200,\n      justifyContent: 'center',\n      paddingVertical: 12,\n      marginTop: 15,\n      paddingHorizontal: 32,\n      borderRadius: 4,\n      elevation: 3,\n      backgroundColor: '#d90f8e',\n    },\n    buttonText: {\n        fontSize: 20,\n        textAlign: 'center',\n    },\n    text1: {\n      width: 250,\n      fontSize: 15,\n      color: 'gray',\n      paddingBottom: 0,\n    },\n  });\n\nexport default Amount;"],"mappings":"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"},"metadata":{},"sourceType":"module"}